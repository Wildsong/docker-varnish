version: "3.9"

services:
  # This serves http content for certbot, running on port 8000.
  # Certbot has to be able to write to its docs folder, but the http server does not.
# We're using APIs now instead of this.
#  certbot_challenge:
#    container_name: certbot_challenge
#    image: cc/challenge
#    build: 
#      dockerfile: Dockerfile.challenge
#      context: .
#    ports:
#      - "8000:8000" # Only needed for curl tests
#    volumes:
#      - ./acme-challenge:/www/.well-known/acme-challenge:ro
#    networks:
#      proxy:
#        aliases:
#          - acme-challenge
#          - challenger

  ####################################################################################
  # You have to choose which task to run on the command line.

  dnsmadeeasy:
    image: cc/certbot
    volumes:
      - $PWD/certs:/etc/letsencrypt:rw
      # Read options here https://eff-certbot.readthedocs.io/en/stable/using.html#configuration-file
    command:
      - "certonly" # Obtain certificate but don't try to install it.
      # options
      #- "--dry-run" # Uncomment this for testing. It might throw errors with DNS Made Easy.
      - "--quiet"
      - "--noninteractive"
      - "-m ${EMAIL}"
      - "--agree-tos"
      - "--expand"
      - "--dns-dnsmadeeasy"
      - "--dns-dnsmadeeasy-credentials"
      - "/usr/local/lib/dnsmadeeasy.ini"
      - "--domains=${DOMAINS}"
      - "--deploy-hook=/etc/letsencrypt/renewal-hooks/deploy/bundle.sh"
      - "--disable-hook-validation"
      - "--max-log-backups=0"
      - "--allow-subset-of-names"
    restart: never

  cloudflare:
    image: cc/certbot
    volumes:
      - $PWD/certs:/etc/letsencrypt:rw
      # Read options here https://eff-certbot.readthedocs.io/en/stable/using.html#configuration-file
    command:
      - "certonly" # Obtain certificate but don't try to install it.
      # options
      #- "--dry-run" # This will throw errors with cloudflare. Modestly useless.
      - "--quiet"
      - "--noninteractive"
      - "-m ${EMAIL}"
      - "--agree-tos"
      - "--expand"
      - "--dns-cloudflare"
      - "--dns-cloudflare-credentials"
      - "/usr/local/lib/cloudflare.ini"
      - "--domains=${DOMAINS}"
      - "--deploy-hook=/etc/letsencrypt/renewal-hooks/deploy/bundle.sh"
      - "--disable-hook-validation"
      - "--max-log-backups=0"
      - "--allow-subset-of-names"
    restart: never
    
  certbot:
    image: cc/certbot
    volumes:
      - $PWD/certs:/etc/letsencrypt:rw
      # certbot writes a file here, then let's encrypt queries it via certbot-challenge
      - ${PWD}/acme-challenge:/www/.well-known/acme-challenge:rw
      # Read options here https://eff-certbot.readthedocs.io/en/stable/using.html#configuration-file
    command:
      - "certonly" # Obtain certificate but don't try to install it.
      # options
      - "--dry-run" # Uncomment this for testing.
      #- "--quiet" # Seems noisy even with this set.
      - "-m ${EMAIL}"
      - "--noninteractive"
      - "--agree-tos"
      - "--expand"
      - "--webroot"
      - "--webroot-path=/www"
      - "--domains=${DOMAINS}"
      - "--deploy-hook=/etc/letsencrypt/renewal-hooks/deploy/bundle.sh"
      - "--disable-hook-validation"
      - "--max-log-backups=0"
      - "--allow-subset-of-names"
    restart: never
