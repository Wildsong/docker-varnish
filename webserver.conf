server {
    # We're behind a reverse proxy that does TLS so we only listen on port 80.
    listen 80;
    resolver 127.0.0.11; # Use the Docker DNS, no longer a reason for this...

    # Rewriting URLS to change simple IDs into complete URLs.
    # In your app, you can use either the plain ID from the attribute field
    # or the complete photo filename (see next section), it does not matter.

    # All bridge photos have a number (3 or 4 digit) followed by a single uppercase letter
#    location ~ \/photos\/(tn\/)?bridges/(\d+[A-Z])$ {
#        # either of these returns works, the second is simpler
##        return 301 https://$host/photos/$1bridges/$2.jpg;
#        return 301 https://$host$request_uri.jpg;
#    }

    # Waterway photo database entries have a number only
    location ~ \/photos\/(tn\/)?waterway\/(\d+)$ {
        return 301 https://$host/photos/$1waterway/ph$2.png;
    }

    # Generate thumbnails on the fly.
    location /photos/tn {
        alias /srv/photos; # Serve the same images, but shrink them
        image_filter resize 220 150;
        image_filter_buffer 100m; # Avoid "too big" errors.

        error_page 404 415 =200 /photos/static/no_photo_available.png;
    }

    # All other static content is here, including the "no photo" image.
    # It's a volume, so no restart should be needed to add or remove content.
    location /photos/static {
        alias /srv/www/static;
        autoindex on;

    }

    # The landing page is here.
    location /photos {
        alias /srv/photos;
        autoindex on;
    }  

    location / {
        alias /srv/www;
        autoindex on;
    }  
 }
